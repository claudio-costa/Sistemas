@model MobLink.WebLeilao.Dominio.Leilao
@{ SelectList Comitentes = ViewBag.Comitentes; }
@{ SelectList Leiloeiros = ViewBag.Leiloeiros; }
@{ SelectList Expositores = ViewBag.Expositores; }
@{ SelectList StatusLeilao = ViewBag.StatusLeilao; }

@{
    ViewBag.Title = "Editar leilão";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <!--Formulário de endereço-->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop="static">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Endereço do leilão</h4>
                </div>
                <div class="modal-body">

                    <div class="form-horizontal">

                        <div class="form-group">
                            @Html.LabelFor(model => model.cep, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.cep, new { @class = "form-control input-sm", Id = "txtcep", @autofocus = "" })
                                @Html.ValidationMessageFor(model => model.cep)
                            </div>

                            <input type="button" id="btnConsultaCep" name="btnConsultaCep" value="Consultar" class="btn btn-primary btn-sm" />
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.endereco, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.endereco, new { @class = "form-control input-sm", Id = "txtEndereco", @focus = "", @readonly = "readonly", name = "txtEndereco" })
                                @Html.ValidationMessageFor(model => model.endereco)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.bairro, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.bairro, new { @class = "form-control input-sm", Id = "txtBairro", @focus = "", @readonly = "readonly", name = "txtBairro" })
                                @Html.ValidationMessageFor(model => model.bairro)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.municipio, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.municipio, new { @class = "form-control input-sm", Id = "txtMunicipio", @focus = "", @readonly = "readonly", name = "txtMunicipio" })
                                @Html.ValidationMessageFor(model => model.municipio)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.uf, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.uf, new { @class = "form-control input-sm", Id = "txtUF", @focus = "", @readonly = "readonly", name = "txtUF" })
                                @Html.ValidationMessageFor(model => model.uf)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.end_numero, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.end_numero, new { @class = "form-control input-sm", Id = "txtEndereco", @focus = "", name = "txtEndereco" })
                                @Html.ValidationMessageFor(model => model.end_numero)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.end_complemento, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.end_complemento, new { @class = "form-control input-sm", Id = "txtEndereco", @focus = "", name = "txtEndereco" })
                                @Html.ValidationMessageFor(model => model.end_complemento)
                            </div>
                        </div>

                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">OK</button>
                    @*<button type="button" class="btn btn-primary">Save changes</button>*@
                </div>
            </div>
        </div>
    </div>
    <!--Fim Formulário de endereço-->

    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.descricao, new { @class = "form-control input-sm", @focus = "" })
            </div>

            <div class="col-md-4">
                @Html.ValidationMessageFor(model => model.descricao)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nome_local, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.nome_local, new { @class = "form-control input-sm" })
            </div>

            <div class="col-md-4">
                @Html.ValidationMessageFor(model => model.nome_local)
                <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#myModal">
                    <span class="glyphicon glyphicon-map-marker"></span>&nbsp;Endereço
                </button>
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.data_leilao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(m => m.data_leilao, new { @class = "form-control input-sm", @Id = "dataleilao" })
                @Html.ValidationMessageFor(model => model.data_leilao)
            </div>

            @Html.LabelFor(model => model.hora_leilao, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                @Html.TextBoxFor(model => model.hora_leilao, new { @class = "form-control input-sm", @Id = "horaleilao" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_leiloeiro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.id_leiloeiro, Leiloeiros, "Selecione um leiloeiro", new { @class = "form-control input-sm" })
            </div>
            <div class="col-md-4">
                @Html.ValidationMessageFor(model => model.id_leiloeiro)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.id_status, StatusLeilao, "Selecione um status", new { @class = "form-control input-sm" })
            </div>
            <div class="col-md-4">
                @Html.ValidationMessageFor(model => model.id_status)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_comitente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.id_comitente, Comitentes, "Selecione um comitente", new { @class = "form-control input-sm" })
            </div>
            <div class="col-md-4">
                @Html.ValidationMessageFor(model => model.id_comitente)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_expositor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.id_expositor, Expositores, "Selecione um expositor", new { @class = "form-control input-sm" })
            </div>
            <div class="col-md-4">
                @Html.ValidationMessageFor(model => model.id_expositor)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.data_hora_publicacao_diario_oficial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.data_hora_publicacao_diario_oficial, new { @class = "form-control input-sm", Id = "datado" })
                @Html.ValidationMessageFor(model => model.data_hora_publicacao_diario_oficial)
            </div>

            @Html.LabelFor(model => model.numero_diario_oficial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.numero_diario_oficial, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.numero_diario_oficial)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ordem_interna_matriz, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.ordem_interna_matriz, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.ordem_interna_matriz)
            </div>

            @Html.LabelFor(model => model.ordem_interna_leilao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.ordem_interna_leilao, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.ordem_interna_leilao)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.data_agendamento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.data_agendamento, new { @class = "form-control input-sm", Id = "data_agendamento" })
                @Html.ValidationMessageFor(model => model.data_agendamento)
            </div>

            @Html.LabelFor(model => model.data_inicio_retirada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.data_inicio_retirada, new { @class = "form-control input-sm", Id = "data_inicio_ret" })
                @Html.ValidationMessageFor(model => model.data_inicio_retirada)
            </div>

            @Html.LabelFor(model => model.data_fim_retirada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.data_fim_retirada, new { @class = "form-control input-sm", Id = "data_fim_ret" })
                @Html.ValidationMessageFor(model => model.data_fim_retirada)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.usuario_cadastro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.usuario_cadastro, new { @class = "form-control input-sm", Id = "", disabled = "" })
                @*@Html.ValidationMessageFor(model => model.DataHoraPublicacao)*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar para a lista", "Index")
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.maskedinput.min.js"></script>


<script>
    $("#dataleilao").mask("99/99/9999", { selectOnFocus: true });
    $("#horaleilao").mask("99:99", { selectOnFocus: true });
    $("#datado").mask("99/99/9999", { selectOnFocus: true });
    $("#txtcep").mask("99999-999", { selectOnFocus: true });

    $("#data_agendamento").mask("99/99/9999", { selectOnFocus: true });
    $("#data_inicio_ret").mask("99/99/9999", { selectOnFocus: true });
    $("#data_fim_ret").mask("99/99/9999", { selectOnFocus: true });

    $("#txtcep").keydown(function () {
        $("#txtEndereco").val("");
        $("#txtBairro").val("");
        $("#txtMunicipio").val("");
        $("#txtUF").val("");
    });

    function PreencheEndereco() {
        $.ajax({
            url: '@Url.Action("ConsultaCEP")',
            data: { cep: $("#txtcep").val() },
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            type: "GET",
            success: function (dados) {
                $("#txtEndereco").val(dados.MeuCEP.TipoLogradouro + " " + dados.MeuCEP.Logradouro);
                $("#txtBairro").val(dados.MeuCEP.Bairro);
                $("#txtMunicipio").val(dados.MeuCEP.Municipio);
                $("#txtUF").val(dados.MeuCEP.Estado);
            },
            error: function () {
                alert("CEP não encontrado");
            }
        });
    }

    $(function () {
        $("#btnConsultaCep").on("click", function () {
            if ($("#txtcep").val() == "") {
                alert("Preencha o CEP corretamente para pesquisa");
            }
            else {
                PreencheEndereco();
            }
        });
    });


</script>
